buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7.+'

    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = '2.1.2'
group = "ml.jozefpeeterslaan72wuustwezel.${mod_id}"
archivesBaseName = mod_id

java.toolchain.languageVersion = JavaLanguageVersion.of(javaVersion)

repositories {
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        url = 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // Channel:   Version:
    // snapshot   YYYYMMDD   Snapshot are built nightly.
    // stable     #          Stables are built at the discretion of the MCP team.
    // official   MCVersion  Official field/method names from Mojang mapping files
    //
    // You must be aware of the Mojang license when using the 'official' mappings.
    // See more information here: https://github.com/MinecraftForge/MCPConfig/blob/master/Mojang.md
    //
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'official', version: "${mc_version}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            ideaModule "${rootProject.name}.${project.name}.main"

            arg "-mixin.config=${mod_id}.mixins.json"

            property "mixin.env.disableRefMap", "true"
            property "mixin.debug.export", "true"
            property "mixin.debug.export.decompile", "false"
            property "mixin.debug.verbose", "true"
            property "mixin.debug.dumpTargetOnFailure", "true"
            property "mixin.checks", "true"
            property "mixin.hotSwap", "true"

            property 'forge.logging.console.level', 'debug'

            mods {
                pepsimc {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('server_run')

            property 'forge.logging.markers', 'REGISTRIES'

            ideaModule "${rootProject.name}.${project.name}.main"

            arg "-mixin.config=${mod_id}.mixins.json"

            property "mixin.env.disableRefMap", "true"
            property "mixin.debug.export", "true"
            property "mixin.debug.export.decompile", "false"
            property "mixin.debug.verbose", "true"
            property "mixin.debug.dumpTargetOnFailure", "true"
            property "mixin.checks", "true"
            property "mixin.hotSwap", "true"

            property 'forge.logging.console.level', 'debug'

            mods {
                pepsimc {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('data_run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            ideaModule "${rootProject.name}.${project.name}.main"

            arg "-mixin.config=${mod_id}.mixins.json"

            property "mixin.env.disableRefMap", "true"
            property "mixin.debug.export", "true"
            property "mixin.debug.export.decompile", "false"
            property "mixin.debug.verbose", "true"
            property "mixin.debug.dumpTargetOnFailure", "true"
            property "mixin.checks", "true"
            property "mixin.hotSwap", "true"

            property 'forge.logging.console.level', 'debug'


            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                pepsimc {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {

    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api") // JEI API
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}") // JEI
    runtimeOnly fg.deobf("curse.maven:mekanism-268560:3875976")

    implementation fg.deobf("software.bernie.geckolib:geckolib-${mc_version_minor}-forge:${geckolib_version}")// Geckolib



}

mixin {
    // MixinGradle Settings
    config "${mod_id}.mixins.json"
    add sourceSets.main, "mixins.${mod_id}-refmap.json"

    debug = true
    debug.verbose = true
    debug.export = true
    dumpTargetOnFailure = true

}

jar {
    manifest {
        attributes([
                "Specification-Title": mod_id,
                "Specification-Vendor": "RMI",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"RMI",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),

                "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
                "TweakOrder": 0,
                "MixinConfigs" : "${mod_id}.mixins.json"
        ])
    }
}


jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
